{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Wybthon","text":"<p>Wybthon is a client-side Python SPA framework that runs in the browser via Pyodide.</p> <ul> <li>Virtual DOM with function and class components</li> <li>Reactive primitives (signal, computed, effect, batch)</li> <li>Router, context, events, forms, async resources</li> <li>Dev server with auto-reload (SSE)</li> </ul> <p>Get started in minutes with the demo in <code>examples/demo</code> or follow the Getting Started guide.</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#wybthon.Component","title":"<code>Component</code>","text":"<p>Class component base for the VDOM renderer.</p> <p>Subclasses should implement <code>render(self) -&gt; VNode</code>. Lifecycle hooks:   - on_mount(self)   - on_update(self, prev_props: dict)   - on_unmount(self)</p>"},{"location":"api/#wybthon.Component.on_mount","title":"<code>on_mount()</code>","text":"<p>Called after the component is first mounted.</p>"},{"location":"api/#wybthon.Component.on_unmount","title":"<code>on_unmount()</code>","text":"<p>Called before the component is removed from the DOM.</p>"},{"location":"api/#wybthon.Component.on_update","title":"<code>on_update(prev_props)</code>","text":"<p>Called after props update and render diff applied.</p>"},{"location":"api/#wybthon.ErrorBoundary","title":"<code>ErrorBoundary</code>","text":"<p>               Bases: <code>Component</code></p> <p>Component that catches errors in its subtree and renders a fallback.</p>"},{"location":"api/#wybthon.Provider","title":"<code>Provider</code>","text":"<p>               Bases: <code>Component if Component is not None else object</code></p> <p>Context provider component.</p> Props <ul> <li>context: Context</li> <li>value: Any</li> <li>children: VNode or list of VNodes</li> </ul>"},{"location":"api/#wybthon.use_resource","title":"<code>use_resource(fetcher)</code>","text":"<p>Create an async Resource with loading/error states and cancellation.</p> <p>The provided <code>fetcher</code> should be an async function returning the data value. If it accepts a <code>signal</code> keyword argument, an AbortSignal will be passed for cancellation support when available.</p>"},{"location":"examples/","title":"Examples","text":"<ul> <li>Counter component (state updates)</li> <li>Async fetch demo (use_resource)</li> <li>Forms demo (bindings, validators)</li> <li>Error boundary demo</li> <li>Router navigation</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<ol> <li>Clone the repo and open <code>examples/demo/index.html</code> in a local server.</li> <li>Use the dev server for auto-reload:</li> </ol> <pre><code># Install (optional for CLI)\npip install .\n# Run dev server at repo root\nwyb dev --dir .\n</code></pre> <ol> <li>Explore the demo components and routes.</li> </ol>"}]}